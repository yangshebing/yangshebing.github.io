<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Swift | 杨社兵的技术博客]]></title>
  <link href="http://yangshebing.github.io/blog/categories/swift/atom.xml" rel="self"/>
  <link href="http://yangshebing.github.io/"/>
  <updated>2016-01-01T17:16:52+08:00</updated>
  <id>http://yangshebing.github.io/</id>
  <author>
    <name><![CDATA[杨社兵]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Swift语言编程]]></title>
    <link href="http://yangshebing.github.io/blog/2015/09/12/swift/"/>
    <updated>2015-09-12T12:53:21+08:00</updated>
    <id>http://yangshebing.github.io/blog/2015/09/12/swift</id>
    <content type="html"><![CDATA[<h4>Swift语言基础学习</h4>

<ul>
<li>导入系统类库头文件（swift中称之为模块）</li>
</ul>


<p><code>
import UIKit
</code></p>

<ul>
<li>定义一个常量</li>
</ul>


<p><code>
let a = 5
</code></p>

<ul>
<li>定义一个变量</li>
</ul>


<p><code>
var str = "Hello, World!"
</code></p>

<ul>
<li>swift中打印输出</li>
</ul>


<p><code>
print("Hi,Girl!");
</code></p>

<p><strong>注意事项：如果在一行内想要写多条语句时需要用分号隔开，一行内写一句代码分号可加可不加（不推荐加）</strong></p>

<p><code>
//一行内多句代码
let dog = "ddd";print(dog)
</code></p>

<pre><code>//一行内一句代码
let my = "我的"
let age = 20
let sex = "male"
print(my)
print(age)
print(sex)
</code></pre>

<ul>
<li>一次性定义多个变量</li>
</ul>


<p><code>
var a = 0.0, b = 0.0, c = 0.0
</code></p>

<ul>
<li>定义变量并赋初值</li>
</ul>


<pre><code>var a : Float = 5;
var userName = "yangshebing"
</code></pre>

<ul>
<li>字符串插值方式：相当于占位符输出</li>
</ul>


<p><code>
print("the user name is \(userName)”)
</code></p>

<ul>
<li>定义一个指定类型的变量</li>
</ul>


<pre><code>var name : String
name = "yangshebing";
print(name);
</code></pre>

<p><strong>注意：在Swift中支持多行注释嵌套</strong></p>

<ul>
<li>定义一个数组</li>
</ul>


<p>最简单粗暴的方法：</p>

<p><code>
let array = ["a", "b", "c"]
</code></p>

<p>常规写法：</p>

<pre><code>let array1: [String] = ["A", "B", "C"]
let array2: Array&lt;String&gt; = ["A", "B", "D”]
</code></pre>

<ul>
<li>整数和浮点数之间转换</li>
</ul>


<pre><code>let num = 3
let pointNum = 0.14159
let pi = Double(num) + pointNum
let numPi = Int(pi)
//Float转换成Int类型时，实型值总是会被缩短，意味着4.75将会变成4, -3.9将会变成-3
print(numPi)
</code></pre>

<ul>
<li>自定义类型别名</li>
</ul>


<pre><code>typealias MyIntType = Int
let num : MyIntType = 10
</code></pre>

<ul>
<li>布尔</li>
</ul>


<p>Swift 有一个基本布尔类型，称之为Bool。它提供了两个布尔常量值:true和false</p>

<pre><code>let isMore = true
let isRainy = false
</code></pre>

<ul>
<li>布尔类型在if语句中的使用</li>
</ul>


<pre><code>let isApple = true
if isApple {
    println("this is Apple")
}
</code></pre>

<p><strong>使用布尔类型应当注意事项：Swift的类型安全机制会防止non-Boolean代替Bool值，比如下面的代码就会报编译时错误：</strong></p>

<pre><code>let num = 1
if num {
    //这个例子编译的时候会报错，但是在Objective-C语言中不会。
}
</code></pre>

<p>正确使用的方式如下：</p>

<pre><code>let number = 1
if number == 1 {
    println("this is one")
    //这个编译成功
}
</code></pre>

<p>另外，这里提一下：在Swift中判断两个对象是否相等是使用”===“”!=="</p>

<ul>
<li>Swift中元组的使用</li>
</ul>


<pre><code>//定义一个元组
let salaryCombination = （10000, "one month"）
//它代表的是一个（Int, String）类型的元组
</code></pre>

<pre><code>//分解元组
let (salary, month) = salaryCombination
print("The salary is \(salary)")
print("The month is \(month)")
//你如果只需要元组的一部分值，你也可以这样写
let (salary,_)
print(the salary is \(salary))
</code></pre>

<ul>
<li>元组取值方式总结</li>
</ul>


<pre><code>方式一
let firstSalary = (10000, "one month")
let (salary1,month1) = firstSalary
let secondSalary = (20000,"two month")
let (salary2, month2) = secondSalary
print("一月收入month1: \(salary1)")
print("二月收入month2: \(salary2)”)

//方式二
let firstSalary = (10000, "one month")
let (salary1,month1) = firstSalary
let secondSalary = (20000,"two month")
let (salary2, month2) = secondSalary
//输出元组中的第0个元素， firstSalary.0：firstSalary代表元组名，0代表下标
print("一月的收入month1: \(firstSalary.0)")
print("二月的收入month2: \(secondSalary.0)”)

//方式三
let firstSalary = (salary : 10000,month : "one month")
let (salary1,month1) = firstSalary
let secondSalary = (salary :20000,month : "two month")
let (salary2, month2) = secondSalary
//输出元组中的第0个元素， firstSalary.salary：firstSalary代表元组名，salary代表元组元素的名字
print("一月的收入month1: \(firstSalary.salary)")
print("二月的收入month2: \(secondSalary.salary)")
</code></pre>

<h4>本文参考文章资料：</h4>

<ul>
<li>《The Swift Programming Language》</li>
</ul>


<p><strong>欢迎共同学习进步，本着分享的精神，只是为了让你学习起来更加轻松。</strong></p>

<p><strong>如需转载，请注明出处</strong></p>
]]></content>
  </entry>
  
</feed>
