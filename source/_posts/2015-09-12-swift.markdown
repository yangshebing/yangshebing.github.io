---
layout: post
title: "swift语言编程"
date: 2015-09-12 12:53:21 +0800
comments: true
tags: [iOS, xcode, Swift]
keywords: ios开发, Swift
categories: Swift
---

#### Swift语言基础学习
* 导入系统类库头文件（swift中称之为模块）

`
import UIKit
`

* 定义一个常量

`
let a = 5
`

* 定义一个变量

`
var str = "Hello, World!"
`

* swift中打印输出

`
print("Hi,Girl!");
`

**注意事项：如果在一行内想要写多条语句时需要用分号隔开，一行内写一句代码分号可加可不加（不推荐加）**
<!--more-->
`
//一行内多句代码
let dog = "ddd";print(dog)
`

```
//一行内一句代码
let my = "我的"
let age = 20
let sex = "male"
print(my)
print(age)
print(sex)
```

* 一次性定义多个变量

`
var a = 0.0, b = 0.0, c = 0.0
`

* 定义变量并赋初值

```
var a : Float = 5;
var userName = "yangshebing"
```

* 字符串插值方式：相当于占位符输出

`
print("the user name is \(userName)”)
`

* 定义一个指定类型的变量

```
var name : String
name = "yangshebing";
print(name);
```

**注意：在Swift中支持多行注释嵌套**

* 定义一个数组

最简单粗暴的方法：

`
let array = ["a", "b", "c"]
`

常规写法：

```
let array1: [String] = ["A", "B", "C"]
let array2: Array<String> = ["A", "B", "D”]
```

* 整数和浮点数之间转换

```
let num = 3
let pointNum = 0.14159
let pi = Double(num) + pointNum
let numPi = Int(pi)
//Float转换成Int类型时，实型值总是会被缩短，意味着4.75将会变成4, -3.9将会变成-3
print(numPi)
```

* 自定义类型别名

```
typealias MyIntType = Int
let num : MyIntType = 10
```

* 布尔

Swift 有一个基本布尔类型，称之为Bool。它提供了两个布尔常量值:true和false

```
let isMore = true
let isRainy = false
```

* 布尔类型在if语句中的使用

```
let isApple = true
if isApple {
    println("this is Apple")
}
```
**使用布尔类型应当注意事项：Swift的类型安全机制会防止non-Boolean代替Bool值，比如下面的代码就会报编译时错误：**

```
let num = 1
if num {
	//这个例子编译的时候会报错，但是在Objective-C语言中不会。
}
```

正确使用的方式如下：

```
let number = 1
if number == 1 {
    println("this is one")
    //这个编译成功
}
```

另外，这里提一下：在Swift中判断两个对象是否相等是使用”===“”!=="

* Swift中元组的使用

```
//定义一个元组
let salaryCombination = （10000, "one month"）
//它代表的是一个（Int, String）类型的元组
```

```
//分解元组
let (salary, month) = salaryCombination
print("The salary is \(salary)")
print("The month is \(month)")
//你如果只需要元组的一部分值，你也可以这样写
let (salary,_)
print(the salary is \(salary))
```

* 元组取值方式总结

```
方式一
let firstSalary = (10000, "one month")
let (salary1,month1) = firstSalary
let secondSalary = (20000,"two month")
let (salary2, month2) = secondSalary
print("一月收入month1: \(salary1)")
print("二月收入month2: \(salary2)”)

//方式二
let firstSalary = (10000, "one month")
let (salary1,month1) = firstSalary
let secondSalary = (20000,"two month")
let (salary2, month2) = secondSalary
//输出元组中的第0个元素， firstSalary.0：firstSalary代表元组名，0代表下标
print("一月的收入month1: \(firstSalary.0)")
print("二月的收入month2: \(secondSalary.0)”)

//方式三
let firstSalary = (salary : 10000,month : "one month")
let (salary1,month1) = firstSalary
let secondSalary = (salary :20000,month : "two month")
let (salary2, month2) = secondSalary
//输出元组中的第0个元素， firstSalary.salary：firstSalary代表元组名，salary代表元组元素的名字
print("一月的收入month1: \(firstSalary.salary)")
print("二月的收入month2: \(secondSalary.salary)")
```
#### 本文参考文章资料：

* 《The Swift Programming Language》

**欢迎共同学习进步，本着分享的精神，只是为了让你学习起来更加轻松。**

**如需转载，请注明出处**